%include 'in_out.asm'
SECTION .data
msg1 db "Функция: f(x)=3x-1 ", 0x0A
msg2 db "Результат: "
SECTION .text
global _start
_start:
pop ecx ; Извлекаем из стека в `ecx` количество
	; аргументов (первое значение в стеке)
pop edx ; Извлекаем из стека в `edx` имя программы
	; (второе значение в стеке)
sub ecx,1 ; Уменьшаем `ecx` на 1 (количество
	; аргументов без названия программы)
mov esi, 0 ; Используем `esi` для хранения
	; промежуточных сумм
mov ebx, 3 ; Храним 3, как один из операндов в ф-ии f(x)
next:
cmp ecx,0h ; проверяем, есть ли еще аргументы
jz _end ; если аргументов нет выходим из цикла
	; (переход на метку `_end`)
pop eax ; иначе извлекаем следующий аргумент из стека
call atoi
call _calcul; преобразуем символ в число
loop next ; переход к обработке следующего аргумента
_end:

mov eax, msg1 
call sprint


mov eax, esi ; записываем сумму в регистр `eax`
call iprintLF ; печать результата
call quit ; завершение программы
;------------------------------------------
; Подпрограмма вычисления
_calcul:
mul eax
mov ebx, eax ; умножаем x на 3
sub ebx, 1 ; вычитаем 1
add esi, ebx ; добавляем готовый результат к общей сумме
ret 
